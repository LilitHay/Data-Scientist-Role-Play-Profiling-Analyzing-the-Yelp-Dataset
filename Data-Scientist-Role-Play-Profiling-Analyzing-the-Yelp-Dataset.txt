Data Scientist Role Play Profiling Analyzing the Yelp Dataset


This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. 
For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. 
You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.
In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular question you want to answer. 
You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, 
so use proper formatting and comments to illustrate your intent as required.
For both parts of this assignment, use the following "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and 
SQL coding into this worksheet where indicated so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, 
Notepad ++, Sublime Text, etc.) to copy and paste your answers.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

i. Attribute table = 10000
SELECT COUNT(*) AS Attribute_Records_Number
FROM Attribute

ii. Business table = 10000
SELECT COUNT(*) AS Business_Records_Number
FROM business


iii. Category table = 10000
SELECT COUNT(*) AS Category_Records_Number
FROM category
 
iv. Checkin table = 10000
SELECT COUNT(*) AS Checkin_Records_Number
FROM checkin 

v. elite_years table = 10000
SELECT COUNT(*) AS elite_years_Records_Number
FROM elite_years 

vi. friend table = 10000 
SELECT COUNT(*) AS Friend_Records_Number
FROM friend 

vii. hours table = 10000
SELECT COUNT(*) AS Hours_Records_Number
FROM hours  

viii. photo table = 10000
SELECT COUNT(*) AS Photo_Records_Number
FROM photo  
 
ix. review table = 10000
SELECT COUNT(*) AS Review_Records_Number
FROM review   

x. tip table = 10000
SELECT COUNT(*) AS Tip_Records_Number
FROM tip   

xi. user table = 10000
SELECT COUNT(*) AS User_Records_Number
FROM user  


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000 

-- Using id as primary key
SELECT COUNT(DISTINCT(id)) AS Business_Distinct_Records
FROM business  

ii. Hours = 1562
-- Using business_id as foreign key
SELECT COUNT(DISTINCT(business_id)) AS Hours_Distinct_Records
FROM Hours

iii. Category = 2643
-- Using business_id as foreign key
SELECT COUNT(DISTINCT(business_id)) AS Category_Distinct_Records
FROM Category

iv. Attribute = 1115
-- Using business_id as foreign key
SELECT COUNT(DISTINCT(business_id)) AS Attribute_Distinct_Records
FROM Attribute 

v. Review = 10000
-- Using id as a primary key
SELECT COUNT(DISTINCT(id)) AS Review_Distinct_Records
FROM Review

vi. Checkin = 493
-- Using business_id as foreign key
SELECT COUNT(DISTINCT(business_id)) AS Checkin_Distinct_Records
FROM Checkin

vii. Photo = 10000
-- Using business_id as foreign key
SELECT COUNT(DISTINCT(id)) AS Photo_Distinct_Records
FROM Photo 

viii. Tip = 537
-- Using user_id as foreign key
SELECT COUNT(DISTINCT(user_id)) AS Tip_Distinct_Records
FROM Tip

ix. User = 10000
-- Using id as primary key
SELECT COUNT(DISTINCT(id)) AS User_Distinct_Records
FROM User

x. Friend = 11
-- Using user_id as foreign key
SELECT COUNT(DISTINCT(user_id)) AS Friend_Distinct_Records
FROM Friend

xi. Elite_years = 2780
-- Using user_id as foreign key
SELECT COUNT(DISTINCT(user_id)) AS Elite_years_Distinct_Records
FROM Elite_years    



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:  PRAGMA table_info(User)

SELECT *
FROM User
WHERE id IS NULL OR 
    name IS NULL OR 
    review_count IS NULL OR 
    yelping_since IS NULL OR 
    useful IS NULL OR
    funny IS NULL OR 
    cool IS NULL OR
    fans IS NULL OR 
    average_stars IS NULL OR
    compliment_hot IS NULL OR
    compliment_more IS NULL OR
    compliment_profile IS NULL OR
    compliment_cute IS NULL OR
    compliment_list IS NULL OR
    compliment_note IS NULL OR
    compliment_plain IS NULL OR
    compliment_cool IS NULL OR
    compliment_funny IS NULL OR
    compliment_writer IS NULL OR
    compliment_photos IS NULL



4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	SELECT MIN(stars), MAX(stars), AVG(stars)
	FROM Review 


	ii. Table: Business, Column: Stars
	
		min:1.0		max:5.0		avg: 3.6549
		
	SELECT MIN(stars), MAX(stars), AVG(stars)
	FROM Business

	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	SELECT MIN(Likes), MAX(Likes),AVG(Likes)
	FROM Tip 

	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	SELECT MIN(Count), MAX(Count), AVG(Count)
	FROM Checkin

	v. Table: User, Column: Review_count
	
		min:0		max:2000	avg:24.2995

	SELECT MIN(Review_count), MAX(Review_count), AVG(Review_count)
	FROM User


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: 
	
	SELECT City, SUM(Review_count)
	FROM Business 
	GROUP BY City
	ORDER BY SUM(Review_count) DESC
	
	
	Copy and Paste the Result Below: 
	
	--Cities with the most Reviews are:
	
  city            | SUM(Review_count) |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montréal        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+
(Output limit exceeded, 25 of 362 total rows shown)


6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

--In the where clause just filtering for specific city
SELECT stars, count(review_count) as Count
FROM Business
WHERE City='Avon'
GROUP BY stars 


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

| stars | Count |
+-------+-------+
|   1.5 |     1 |
|   2.5 |     2 |
|   3.5 |     3 |
|   4.0 |     2 |
|   4.5 |     1 |
|   5.0 |     1 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:

--In the where clause just filtering for specific city
SELECT stars, count(review_count) as Count
FROM Business
WHERE City='Beachwood'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):


| stars | Count |
+-------+-------+
|   2.0 |     1 |
|   2.5 |     1 |
|   3.0 |     2 |
|   3.5 |     2 |
|   4.0 |     1 |
|   4.5 |     2 |
|   5.0 |     5 |

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
SELECT Id, Name, SUM(review_count) AS total_reviews
FROM User
GROUP BY Id, Name
ORDER BY SUM(review_count) DESC
LIMIT 3	
	
	Copy and Paste the Result Below:

| id                     | name   | total_reviews |
+------------------------+--------+---------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |          2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |          1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |          1339 |



8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:


In my opinion there is not that much correlation between reviews and fans. As we can see
from results it's not that number of reviews are increasing when number of fans are increasing and vise versa.
Or it's not that number of reviews are descreasing when number of fans are descreasing and vise versa.



SELECT name, review_count, fans
FROM user
ORDER BY review_count DESC, fans DESC

My results are here:

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)


9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: "love" (4018 reviews) is more than "hate" (371 reviews)

	
	SQL code used to arrive at answer:

--Calculating number of users whoes review text has word "hate"
SELECT SUM(User_id) AS total_users
FROM review
WHERE text LIKE '%hate%'


--Calculating number of users whoes review text has word "love"
SELECT SUM(User_id) AS total_users
FROM review
WHERE text LIKE '%love%'


10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT name, fans
FROM user
ORDER BY fans DESC
LIMIT 10	
	
	Copy and Paste the Result Below:

 +-----------+------------+
| name      | total_fans |
+-----------+------------+
| Amy       |        503 |
| Mimi      |        497 |
| Harald    |        311 |
| Gerald    |        253 |
| Christine |        173 |
| Lisa      |        159 |
| Cat       |        133 |
| William   |        126 |
| Fran      |        124 |
| Lissa     |        120 |
+-----------+------------+





Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. 
Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

-- For analysis I took city 'Charlotte', category 'Shopping' and business group 'T-Mobile'& 'Desert Medical Equipment'

	
i. Do the two groups you chose to analyze have a different distribution of hours?

Generally speaking there is a difference between distribution of hours for 2-3 stars businesses and 4-5 stars businesses.
Distribution hours for businesses with 2-3 stars are on Saturdays(8:00-22:00), while for 4-5 stars businesses it is on Monday|8:00-17:00.


SELECT 
    b.name, 
    b.city, 
    b.review_count,
	b.is_open,
    c.category,
    h.hours,
	
CASE
	WHEN b.stars BETWEEN 2 AND 3 THEN "2-3 Ratings"
	WHEN b.stars BETWEEN 4 AND 5 THEN "4-5 Ratings"
	
END AS rating
FROM business b JOIN category c
    ON b.id = c.business_id
JOIN hours h 
    ON b.id = h.business_id
WHERE c.category = 'Shopping' AND rating IN ("2-3 Ratings", "4-5 Ratings")
GROUP BY name
ORDER by  rating


ii. Do the two groups you chose to analyze have a different number of reviews?

Yes they are. Total number of reviews of the second group (4-5stars) more than for the first group with 2-3stars reviews.
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
For the second group with 4-5stars reviews distribution are mainly done from Cleveland   city.
For the first group with 2-3 stars reviews distribution location which are open are 2 cities Las Vegas city and Gilbert.

SQL code used for analysis: 


SELECT 
    b.name, 
    b.city, 
    b.review_count,
	b.is_open,
    c.category,
    h.hours,
	
CASE
	WHEN b.stars BETWEEN 2 AND 3 THEN "2-3 Ratings"
	WHEN b.stars BETWEEN 4 AND 5 THEN "4-5 Ratings"
	
END AS rating
FROM business b JOIN category c
    ON b.id = c.business_id
JOIN hours h 
    ON b.id = h.business_id
WHERE c.category = 'Shopping' AND rating IN ("2-3 Ratings", "4-5 Ratings")
GROUP BY name
ORDER by  rating



2. Group business based on the ones that are open and the ones that are closed. 
What differences can you find between the ones that are still open and the ones that are closed? 
List at least two differences and the SQL code you used to arrive at your answer.

For analysis I took city for exploration 'Charlotte' and category "Shopping"
		
i. Difference 1: In the city 'Charlotte' there is no businesses with star reviews 2-3. While for businesses with 4-5 there is 1 busines HighLife North Tryon
         
For analysis I took category "Shopping"       
ii. Difference 2: From 11 businesses with 4-5 stars review 10 businesses are open while 1 is closed. 
From 3 businesses with 2-3 stars review 2 businesses are open while 1 is closed.
         
         
         
SQL code used for analysis:

SELECT 
    b.name, 
    b.city, 
    b.stars, 
    b.review_count, 
    b.is_open, 
    h.hours
 
FROM business b JOIN hours h 
    ON b.id = h.business_id
WHERE b.city= 'Charlotte'
GROUP BY b.stars, b.is_open
ORDER BY b.stars DESC





3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, 
predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, 
so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

The main goal of my analysis is to identify 10 bed working businesses based on customer reviews.
And also find out the main reasons why customers were dissatisfied and put 1 star and wrote a review.
This analysis will help potential customers of a particular business to read and decide whether to use the products/services of that business or not.

          
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data: 

To conduct an analysis, I will need information about the businesses, in particular, the name, customer reviews, star ratings and 
comments that customers left to find out the main reasons and factors that influence their decision to give 1 star and write a review.
                           
                  
iii. Output of your finished dataset:

+-------------------------------+--------------+-------+
| name                          | review_count | stars |
+-------------------------------+--------------+-------+
| Carson Kitchen                |         1410 |     1 |
| MGM Grand Buffet              |          961 |     1 |
| Breakfast Club- Scottsdale    |          823 |     1 |
| VegeNation                    |          821 |     1 |
| YOLOS                         |          450 |     1 |
| Jose Cuervo Tequileria        |          414 |     1 |
| Sunset Station Hotel & Casino |          402 |     1 |
| Cheba Hut                     |          334 |     1 |
| Jasmine Grill                 |          328 |     1 |
| Beaver Choice                 |          326 |     1 |
+-------------------------------+--------------+-------+

Top reasons for customer dissatisfaction

1. Incorrect information about working hours and bed/dangerous location.
2. Old, poorly prepared food with little choice.
3. Poor customer service.
4. Long wait for orders.

      
         
iv. Provide the SQL code you used to create your final dataset:


SELECT 
    b.name,
    b.review_count,
    r.stars,
    r.text

FROM business b left join review r 
    ON b.id =r.business_id
LEFT JOIN hours h 
    ON b.id =h.business_id
WHERE r.stars in (1,2)
GROUP BY b.name
ORDER BY r.stars, b.review_count DESC
LIMIT 10

